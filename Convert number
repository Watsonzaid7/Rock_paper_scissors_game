#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#define MAX 100

void reverse(char* str) {
    int length = strlen(str);
    for (int i = 0; i < length / 2; i++) {
        char temp = str[i];
        str[i] = str[length - i - 1];
        str[length - i - 1] = temp;
    }
}

void integerToBase(int number, int base, char* result) {
    int index = 0;
    while (number > 0) {
        int remainder = number % base;
        if (remainder < 10) {
            result[index++] = '0' + remainder;
        } else {
            result[index++] = 'A' + (remainder - 10);
        }
        number /= base;
    }
    result[index] = '\0';
    reverse(result);
}

double fractionalToBase(double number, int base, char* result, int precision) {
    int index = 0;
    while (precision--) {
        number *= base;
        int integerPart = (int)number;
        if (integerPart < 10) {
            result[index++] = '0' + integerPart;
        } else {
            result[index++] = 'A' + (integerPart - 10);
        }
        number -= integerPart;
    }
    result[index] = '\0';
}

void baseToInteger(const char* str, int base, int* result) {
    int length = strlen(str);
    *result = 0;
    for (int i = 0; i < length; i++) {
        char digit = str[i];
        int value = (digit >= '0' && digit <= '9') ? (digit - '0') : (digit - 'A' + 10);
        *result = (*result) * base + value;
    }
}

void baseToFractional(const char* str, int base, double* result) {
    int length = strlen(str);
    *result = 0.0;
    double basePower = 1.0 / base;
    for (int i = 0; i < length; i++) {
        char digit = str[i];
        int value = (digit >= '0' && digit <= '9') ? (digit - '0') : (digit - 'A' + 10);
        *result += value * basePower;
        basePower /= base;
    }
}

void convertBase(const char* input, int fromBase, int toBase, char* output) {
    char integerPart[MAX], fractionalPart[MAX];
    sscanf(input, "%[^.].%s", integerPart, fractionalPart);
    
    int integerDecimal;
    double fractionalDecimal;
    baseToInteger(integerPart, fromBase, &integerDecimal);
    baseToFractional(fractionalPart, fromBase, &fractionalDecimal);
    
    char integerResult[MAX], fractionalResult[MAX];
    integerToBase(integerDecimal, toBase, integerResult);
    fractionalToBase(fractionalDecimal, toBase, fractionalResult, 10);
    
    sprintf(output, "%s.%s", integerResult, fractionalResult);
}

int main() {
    char input[MAX], output[MAX];
    int fromBase, toBase;
    
    printf("Enter the number: ");
    scanf("%s", input);
    printf("Enter the base of the input number: ");
    scanf("%d", &fromBase);
    printf("Enter the base to convert to: ");
    scanf("%d", &toBase);
    
    convertBase(input, fromBase, toBase, output);
    
    printf("Converted number: %s\n", output);
    
    return 0;
}
